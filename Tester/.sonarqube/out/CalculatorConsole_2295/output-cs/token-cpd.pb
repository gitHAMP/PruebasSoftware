è
XC:\Users\hamp\source\repos\PruebasSoftware2\Tester\CalculatorConsole\ArgumentsOptions.cs
	namespace 	
CalculatorConsole
 
{ 
public 

enum 
OperationType 
{ 
suma		 
,		 
divide

 
} 
public 

class 
ArgumentsOptions !
{ 
public 
OperationType 
	Operacion &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
[ 	
ValueOption	 
( 
$num 
) 
] 
public 
int 
Value1 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
ValueOption	 
( 
$num 
) 
] 
public 
int 
Value2 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
ParserState	 
] 
public 
IParserState 
LastParserState +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
[ 	

HelpOption	 
] 
public 
string 
GetUsage 
( 
)  
{ 	
return 
HelpText 
. 
	AutoBuild %
(% &
this& *
,* +
( 
HelpText 
current 
)  
=>! #
HelpText$ ,
., -'
DefaultParsingErrorsHandler- H
(H I
thisI M
,M N
currentO V
)V W
)W X
;X Y
}   	
}!! 
}"" Æ

RC:\Users\hamp\source\repos\PruebasSoftware2\Tester\CalculatorConsole\Calculator.cs
	namespace 	
CalculatorConsole
 
{ 
public		 

class		 

Calculator		 
:		 
ICalculator		 )
{

 
public 
int 
Suma 
( 
int 
a 
, 
int "
b# $
)$ %
{ 	
return 
a 
+ 
b 
; 
} 	
public 
int 
Dividir 
( 
int 
a  
,  !
int" %
b& '
)' (
{ 	
if 
( 
a 
< 
b 
) 
throw 
new %
InvalidOperationException 3
(3 4
)4 5
;5 6
if 
( 
a 
<= 
$num 
) 
return 
$num 
; 
if 
( 
b 
== 
$num 
) 
return 
a 
; 
return 
a 
/ 
b 
; 
} 	
} 
} ²
SC:\Users\hamp\source\repos\PruebasSoftware2\Tester\CalculatorConsole\ICalculator.cs
	namespace 	
CalculatorConsole
 
{ 
	interface		 
ICalculator		 
{

 
int 
Dividir 
( 
int 
a 
, 
int 
b  
)  !
;! "
int 
Suma 
( 
int 
a 
, 
int 
b 
) 
; 
} 
} ¼
OC:\Users\hamp\source\repos\PruebasSoftware2\Tester\CalculatorConsole\Program.cs
	namespace 	
CalculatorConsole
 
{ 
public		 

static		 
class		 
Program		 
{

 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var 
options 
= 
new 
ArgumentsOptions .
(. /
)/ 0
;0 1
var 
isValid 
= 
CommandLine %
.% &
Parser& ,
., -
Default- 4
.4 5
ParseArguments5 C
(C D
argsD H
,H I
optionsJ Q
)Q R
;R S
if 
( 
isValid 
) 
{ 
var 
c 
= 
new 

Calculator &
(& '
)' (
;( )
double 
result 
= 
$num  !
;! "
switch 
( 
options 
.  
	Operacion  )
)) *
{ 
case 
OperationType &
.& '
suma' +
:+ ,
result 
=  
c! "
." #
Suma# '
(' (
options( /
./ 0
Value10 6
,6 7
options8 ?
.? @
Value2@ F
)F G
;G H
break 
; 
case 
OperationType &
.& '
divide' -
:- .
result 
=  
c! "
." #
Dividir# *
(* +
options+ 2
.2 3
Value13 9
,9 :
options; B
.B C
Value2C I
)I J
;J K
break 
; 
default 
: 
break 
; 
} 
Console   
.   
	WriteLine   !
(  ! "
$"  " $ 
Resultado esperado:   $ 8
{  8 9
result  9 ?
}  ? @
"  @ A
)  A B
;  B C
Console&& 
.&& 
	WriteLine&& !
(&&! "
)&&" #
;&&# $
c'' 
.'' 
Dividir'' 
('' 
$num'' 
,'' 
$num'' 
)'' 
;''  
Console(( 
.(( 
	WriteLine(( !
(((! "
)((" #
;((# $
Console** 
.** 
	WriteLine** !
(**! "
$str**" A
)**A B
;**B C
Console++ 
.++ 
ReadLine++  
(++  !
)++! "
;++" #
},, 
}-- 	
}.. 
}// Š
_C:\Users\hamp\source\repos\PruebasSoftware2\Tester\CalculatorConsole\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str ,
), -
]- .
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str .
). /
]/ 0
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *